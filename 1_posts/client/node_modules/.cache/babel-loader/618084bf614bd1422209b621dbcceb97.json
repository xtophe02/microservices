{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/Microservices/blog/client/src/CommentsList.js\";\nimport React from \"react\"; // import axios from \"axios\";\n\nconst CommentsList = ({\n  comments\n}) => {\n  const content = comment => {\n    switch (comment.status) {\n      case 'approved':\n        return comment.content;\n\n      case 'pending':\n        return 'awaiting approval';\n\n      case 'rejected':\n        return 'this comment has been rejected';\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"li\", {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, content(comment))));\n};\n\nexport default CommentsList;","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/Microservices/blog/client/src/CommentsList.js"],"names":["React","CommentsList","comments","content","comment","status","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAMC,OAAO,GAAGC,OAAD,IAAW;AACxB,YAAQA,OAAO,CAACC,MAAhB;AACE,WAAK,UAAL;AACE,eAAOD,OAAO,CAACD,OAAf;;AACF,WAAK,SAAL;AACE,eAAO,mBAAP;;AACF,WAAK,UAAL;AACE,eAAO,gCAAP;;AAEF;AACE;AATJ;AAWD,GAZD;;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACI,GAAT,CAAcF,OAAD,iBACZ;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBJ,OAAO,CAACC,OAAD,CAA7B,CADD,CADH,CADF;AAOD,CArBD;;AAuBA,eAAeH,YAAf","sourcesContent":["import React from \"react\";\n// import axios from \"axios\";\n\nconst CommentsList = ({ comments }) => {\n  const content= (comment)=>{\n    switch (comment.status) {\n      case 'approved':\n        return comment.content\n      case 'pending':\n        return 'awaiting approval'\n      case 'rejected':\n        return 'this comment has been rejected'\n    \n      default:\n        break;\n    }\n  }\n  return (\n    <ul>\n      {comments.map((comment) => (\n        <li key={comment.id}>{content(comment)}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n"]},"metadata":{},"sourceType":"module"}