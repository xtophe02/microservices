{"ast":null,"code":"var _jsxFileName = \"/home/chrismo/Documents/PROJECTS/Microservices/blog/client/src/CommentsList.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nconst CommentsList = ({\n  comments\n}) => {\n  // const [comments, setComments] = React.useState([]);\n  // React.useEffect((postId) => {\n  //   const fetchComments = async () => {\n  //     const res = await axios.get(\n  //       `http://localhost:4001/posts/${postId}/comments`\n  //     );\n  //     setComments(res.data);\n  //   };\n  //   fetchComments();\n  // }, []);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"li\", {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, comment.content)));\n};\n\nexport default CommentsList;","map":{"version":3,"sources":["/home/chrismo/Documents/PROJECTS/Microservices/blog/client/src/CommentsList.js"],"names":["React","axios","CommentsList","comments","map","comment","id","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACZ;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,OAAO,CAACE,OAA9B,CADD,CADH,CADF;AAOD,CAtBD;;AAwBA,eAAeL,YAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nconst CommentsList = ({ comments }) => {\n  // const [comments, setComments] = React.useState([]);\n\n  \n\n  // React.useEffect((postId) => {\n  //   const fetchComments = async () => {\n  //     const res = await axios.get(\n  //       `http://localhost:4001/posts/${postId}/comments`\n  //     );\n  \n  //     setComments(res.data);\n  //   };\n  //   fetchComments();\n  // }, []);\n  return (\n    <ul>\n      {comments.map((comment) => (\n        <li key={comment.id}>{comment.content}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n"]},"metadata":{},"sourceType":"module"}